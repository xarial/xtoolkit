<Window x:Class="WpfTester.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ctrls="clr-namespace:Xarial.XToolkit.Wpf.Controls;assembly=Xarial.XToolkit.Wpf"
        xmlns:local="clr-namespace:WpfTester"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0">
            <TabItem Header="FlagEnumComboBox">
                <StackPanel Orientation="Vertical" DataContext="{Binding Path=FlagEnumComboBox}">
                    <ctrls:FlagEnumComboBox Margin="2" Value="{Binding Path=Enum1}"/>
                    <ctrls:FlagEnumComboBox Margin="2" Value="{Binding Path=Enum2}"/>
                    <ctrls:FlagEnumComboBox Margin="2" Value="{Binding Path=Enum3}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="EnumComboBox">
                <StackPanel Orientation="Vertical" DataContext="{Binding Path=EnumComboBox}">
                    <ctrls:EnumComboBox Margin="2" Value="{Binding Path=Enum1}"/>
                    <ctrls:EnumComboBox Margin="2" Value="{Binding Path=Enum2}"/>
                    <ctrls:EnumComboBox Margin="2" Value="{Binding Path=Enum3}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="CheckableComboBox">
                <StackPanel Orientation="Vertical" DataContext="{Binding Path=CheckableComboBox}">
                    <ctrls:CheckableComboBox Margin="2" ItemsSource="{Binding Path=ItemsSource1}" SelectedItems="{Binding Path=SelectedItems1}"/>
                    <ctrls:CheckableComboBox Margin="2" ItemsSource="{Binding Path=ItemsSource2}" SelectedItems="{Binding Path=SelectedItems2}"/>
                    <ctrls:CheckableComboBox Margin="2" ItemsSource="{Binding Path=ItemsSource3}" SelectedItems="{Binding Path=SelectedItems3}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="NumberBox">
                <StackPanel Orientation="Vertical" DataContext="{Binding Path=NumberBox}">
                    <ctrls:NumberBoxDouble Margin="2" Value="{Binding Path=DoubleVal}" Height="50" />
                    <ctrls:NumberBoxInteger Margin="2" Value="{Binding Path=IntVal}" MinimumValue="10" MaximumValue="100"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="TreeViewEx">
                <StackPanel Orientation="Vertical" DataContext="{Binding Path=TreeViewEx}">
                    <ctrls:TreeViewEx ItemsSource="{Binding Path=Items}" Height="300"
                                      SelectedItem="{Binding Path=SelectedItem}" Margin="2">
                        <ctrls:TreeViewEx.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                                <TextBlock Text="{Binding Path=Title}"/>
                            </HierarchicalDataTemplate>
                        </ctrls:TreeViewEx.ItemTemplate>
                    </ctrls:TreeViewEx>
                    <Button Command="{Binding Path=SelectNextItemCommand}">
                        <TextBlock Text="Select Next"/>
                    </Button>
                </StackPanel>
            </TabItem>
            <TabItem Header="XDataGrid">
                <StackPanel DataContext="{Binding Path=XDataGrid}" Orientation="Vertical">
                    <CheckBox IsChecked="{Binding Path=ShowColumns}">
                        <TextBlock Text="Show Columns"/>
                    </CheckBox>
                    <ctrls:XDataGrid ItemsSource="{Binding Path=Rows}"
                                     ColumnsSource="{Binding Path=ColumnsSource}"
                                     ColumnsPreCreated="OnColumnsPreCreated"
                                     ColumnVisibilityBinding="{Binding Path=Header.Visibility, RelativeSource={RelativeSource Mode=Self}}">
                        <ctrls:XDataGrid.StaticColumns>
                            <DataGridTextColumn Header="Static Text"/>
                            <DataGridCheckBoxColumn Header="Static Toggle"/>
                        </ctrls:XDataGrid.StaticColumns>
                        <ctrls:XDataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ctrls:XDataGrid.ColumnHeaderStyle>
                        <ctrls:XDataGrid.ColumnHeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Title}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </ctrls:XDataGrid.ColumnHeaderTemplate>
                        <ctrls:XDataGrid.CellContentSelector>
                            <local:CellContentSelector/>
                        </ctrls:XDataGrid.CellContentSelector>
                        <ctrls:XDataGrid.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Value}"/>
                            </DataTemplate>
                        </ctrls:XDataGrid.CellTemplate>
                        <ctrls:XDataGrid.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </ctrls:XDataGrid.CellEditingTemplate>
                    </ctrls:XDataGrid>
                    <ctrls:XDataGrid ItemsSource="{Binding Path=Rows}"
                                     ColumnsSource="{Binding Path=ColumnsSource}">
                        <ctrls:XDataGrid.ColumnHeaderTemplateSelector>
                            <local:MyColumnTemplateSelector>
                                <local:MyColumnTemplateSelector.AColumn>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Title}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </local:MyColumnTemplateSelector.AColumn>
                                <local:MyColumnTemplateSelector.Default>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Title}"/>
                                    </DataTemplate>
                                </local:MyColumnTemplateSelector.Default>
                            </local:MyColumnTemplateSelector>
                        </ctrls:XDataGrid.ColumnHeaderTemplateSelector>
                        <ctrls:XDataGrid.CellContentSelector>
                            <local:CellContentSelector/>
                        </ctrls:XDataGrid.CellContentSelector>
                        <ctrls:XDataGrid.CellTemplateSelector>
                            <local:MyCellTemplateSelector>
                                <local:MyCellTemplateSelector.AColumn>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Value}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </local:MyCellTemplateSelector.AColumn>
                                <local:MyCellTemplateSelector.Default>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Value}"/>
                                    </DataTemplate>
                                </local:MyCellTemplateSelector.Default>
                            </local:MyCellTemplateSelector>
                        </ctrls:XDataGrid.CellTemplateSelector>
                        <ctrls:XDataGrid.CellEditingTemplateSelector>
                            <local:MyCellEditingTemplateSelector>
                                <local:MyCellEditingTemplateSelector.AColumn>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </local:MyCellEditingTemplateSelector.AColumn>
                                <local:MyCellEditingTemplateSelector.Default>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </local:MyCellEditingTemplateSelector.Default>
                            </local:MyCellEditingTemplateSelector>
                        </ctrls:XDataGrid.CellEditingTemplateSelector>
                    </ctrls:XDataGrid>
                </StackPanel>
            </TabItem>
            <TabItem Header="XListView">
                <StackPanel DataContext="{Binding Path=XListView}" Orientation="Vertical">
                    <ctrls:XListView ItemsSource="{Binding Path=Items}"
                                     SelectedItemsSource="{Binding Path=SelectedItems}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="AboutDialog">
                <Button Click="OnShowAboutClick">Show About</Button>
            </TabItem>
            <TabItem Header="File System Browser">
                <StackPanel Orientation="Vertical">
                    <Button Click="OnBrowseFileOpen">Browse File Open</Button>
                    <Button Click="OnBrowseFileSave">Browse File Save</Button>
                    <Button Click="OnBrowseFilesOpen">Browse Files Open</Button>
                    <Button Click="OnBrowseFolder">Browse folder</Button>
                </StackPanel>
            </TabItem>
            <TabItem Header="ProgressPane">
                <Grid DataContext="{Binding Path=ProgressPane}">
                    <ctrls:ProgressPanel Progress="{Binding Path=Progress}"
                                         Message="{Binding Path=Message}" Background="#7FFFFFFF"
                                         IsWorkInProgress="{Binding Path=IsWorkInProgress}">
                        <ctrls:ProgressPanel.MessageTextBlockStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="32"/>
                            </Style>
                        </ctrls:ProgressPanel.MessageTextBlockStyle>
                        <Grid Background="Yellow">
                            <Button VerticalAlignment="Center" HorizontalAlignment="Center"
                                    Command="{Binding Path=DoWorkCommand}" Margin="5">
                                <TextBlock Text="Do Work" Margin="5"/>
                            </Button>
                        </Grid>
                    </ctrls:ProgressPanel>
                </Grid>
            </TabItem>
            <TabItem Header="InputBoxDialog">
                <Button Click="OnShowInputBoxClick">Show Input Box</Button>
            </TabItem>
            <TabItem Header="ExpandToggleButton">
                <Grid DataContext="{Binding Path=ExpandToggleButton}">
                    <ctrls:ExpandToggleButton IsChecked="{Binding Path=IsExpanded}"/>
                </Grid>
            </TabItem>
            <TabItem Header="PopupMenu">
                <Grid DataContext="{Binding Path=PopupMenu}" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <ctrls:PopupMenu>
                        <Grid>
                            <TextBlock Text="{Binding Path=Text}" Margin="10"/>
                        </Grid>
                    </ctrls:PopupMenu>
                </Grid>
            </TabItem>
            <TabItem Header="LabeledControl">
                <Grid Grid.IsSharedSizeScope="True">
                    <StackPanel DataContext="{Binding Path=LabeledControl}" Orientation="Vertical">
                        <ctrls:LabeledControl Label="Test Label:" Margin="2" GridSharedSizeGroup="LabelGridGroup">
                            <TextBox Text="Some Text 1"/>
                        </ctrls:LabeledControl>
                        <ctrls:LabeledControl Label="Another Test Label:" Margin="2" GridSharedSizeGroup="LabelGridGroup">
                            <TextBox Text="{Binding Path=Text1}"/>
                        </ctrls:LabeledControl>
                        <ctrls:LabeledControl Label="Another Test Label Number 3:" Margin="2">
                            <TextBox Text="Some Text 3"/>
                            <ctrls:LabeledControl.TextBlockStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="Green"/>
                                </Style>
                            </ctrls:LabeledControl.TextBlockStyle>
                        </ctrls:LabeledControl>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="ExpressionBox">
                <Grid DataContext="{Binding Path=ExpressionBox}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox/>
                    <ctrls:ExpressionBox x:Name="expBox" Expression="{Binding Path=Expression1}" VariableLinks="{Binding Path=VariableLinks}" Grid.Column="0" Margin="5">
                        <ctrls:ExpressionBox.VariableDescriptor>
                            <local:MyExpressionVariableDescriptor/>
                        </ctrls:ExpressionBox.VariableDescriptor>
                    </ctrls:ExpressionBox>
                    <Button Grid.Column="1" Command="{Binding Path=InsertVariableCommand}" CommandParameter="{Binding ElementName=expBox}">
                        <TextBlock Text="+"/>
                    </Button>
                    <ctrls:ExpressionBox Expression="{Binding Path=Expression2}" Grid.Column="0" Grid.Row="1" Margin="5">
                        <ctrls:ExpressionBox.Style>
                            <Style TargetType="{x:Type ctrls:ExpressionBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ctrls:ExpressionBox.Style>
                    </ctrls:ExpressionBox>
                    <ctrls:ExpressionBox Grid.Column="0" Margin="5" BorderBrush="Blue" BorderThickness="1" Grid.Row="2"/>
                    <ctrls:ExpressionBox Grid.Column="0" Expression="{Binding Path=Expression3}" Margin="5" BorderBrush="Blue" BorderThickness="1" Grid.Row="3">
                        <ctrls:ExpressionBox.VariableLinks>
                            <ctrls:NamedExpressionVariableLink VariableName="prp" Title="Insert 'prp' variable" EnterArguments="True"/>
                            <ctrls:NamedExpressionVariableLink VariableName="b" Title="Insert 'b' variable" Icon="/WpfTester;component/Resources/icon.png"/>
                        </ctrls:ExpressionBox.VariableLinks>
                        <ctrls:ExpressionBox.VariableDescriptor>
                            <ctrls:ExpressionVariableDescriptor>
                                <ctrls:ExpressionVariableArgumentsInfo VariableName="prp" TitleFormat="{}Property '{0}'" DescriptionFormat="Property Variable" Dynamic="False">
                                    <ctrls:ExpressionVariableArgumentsInfo.Arguments>
                                        <ctrls:ExpressionVariableArgumentTextDescriptor Title="Property Name" Description="Name of the property" HasAdvancedEditor="True"/>
                                    </ctrls:ExpressionVariableArgumentsInfo.Arguments>
                                </ctrls:ExpressionVariableArgumentsInfo>
                                <ctrls:ExpressionVariableArgumentsInfo VariableName="b" TitleFormat="Variable 'b'" Background="LightBlue" Icon="/WpfTester;component/Resources/icon.png" DescriptionFormat="Variable 'b'" Dynamic="True">
                                    <ctrls:ExpressionVariableArgumentsInfo.Arguments>
                                        <ctrls:ExpressionVariableArgumentOptionsDescriptor Title="Options" Icon="/WpfTester;component/Resources/icon.png">
                                            <ctrls:ExpressionVariableArgumentOptionsDescriptor.Items>
                                                <sys:String>Item 1</sys:String>
                                                <sys:String>Item 2</sys:String>
                                                <sys:String>Item 3</sys:String>
                                            </ctrls:ExpressionVariableArgumentOptionsDescriptor.Items>
                                        </ctrls:ExpressionVariableArgumentOptionsDescriptor>
                                    </ctrls:ExpressionVariableArgumentsInfo.Arguments>
                                </ctrls:ExpressionVariableArgumentsInfo>
                            </ctrls:ExpressionVariableDescriptor>
                        </ctrls:ExpressionBox.VariableDescriptor>
                    </ctrls:ExpressionBox>
                </Grid>
            </TabItem>
        </TabControl>
        <Button Grid.Row="1" Margin="5" Width="100" Click="OnButtonClick">
            <TextBlock Text="Test" Margin="5"/>
        </Button>
    </Grid>
</Window>
